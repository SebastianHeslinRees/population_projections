% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/population_into_age_groups.R
\name{population_into_age_groups}
\alias{population_into_age_groups}
\title{Aggregate a single-year-of-age population into age groups}
\usage{
population_into_age_groups(
  population,
  age_groups,
  labels,
  data_cols,
  include.lowest = T
)
}
\arguments{
\item{population}{A data frame containing population data by single year of
age}

\item{age_groups}{A numeric vector of breaks in the age data. The breaks are
defined as the highest value in each bin. See \code{cut} for more details.
Note: if \code{include.lowest} is set to \code{TRUE} (as it is by default)
the lowest value must also be present}

\item{labels}{String. The labels to be used in the \code{age_group} column in
the output. Must be the same length as age_groups.}

\item{data_cols}{String. A vector with the names of any columns containing
data to be aggregated}

\item{include.lowest}{Logical. Passed to \code{cut}. Does the variable
\code{age_groups} include the lowest age. If set to FALSE the function will
assume the first bin contains any value less than and including the stated
value. Default \code{TRUE}}
}
\value{
A data frame of population data grouped by age group
}
\description{
Given an input population by sya the function will assign each age to a
defined age group using \code{base::cut} and then group and summarise the
data using \code{dplyr} functions, summing each column specified in
\code{data_cols} by age group.
}
\details{
Note: all columns not specified in \code{data_cols} are assumed to be
aggregation levels.
}
